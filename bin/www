// Adding module dependencies.
var app = require("../app");
var debug = require("debug")("zen:server");
var http = require("http");

// Getting port from client and use in Express JS.
var port = normalizePort(process.env.PORT || "3000");
app.set("port", port);

// Creating HTTP server to serve web application.
var server = http.createServer(app);

// Listen on provided port, on all network interfaces.
server.listen(port, (err) => {
  if (err) throw err;
  console.log("LISTENING ON PORT 3000");
});
server.on("error", onError);
server.on("listening", onListening);

// Normalizing a port into a number/string/boolean false to avoid any datatype errors.
function normalizePort(val) {
  var port = parseInt(val, 10);

  if (isNaN(port)) {
    return val;
  }
  if (port >= 0) {
    return port;
  }
  return false;
}

// Event listener for HTTP server "error".
function onError(error) {
  if (error.syscall !== "listen") {
    throw error;
  }

  var bind = typeof port === "string" ? "Pipe " + port : "Port " + port;

  // Handling specific listen errors with console messages
  switch (error.code) {
    case "EACCES":
      console.error(bind + " requires elevated privileges");
      process.exit(1);
      break;
    case "EADDRINUSE":
      console.error(bind + " is already in use");
      process.exit(1);
      break;
    default:
      throw error;
  }
}

// Event listener for HTTP server "listening".
function onListening() {
  var addr = server.address();
  var bind = typeof addr === "string" ? "pipe " + addr : "port " + addr.port;
  debug("Listening on " + bind);
}
